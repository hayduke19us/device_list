#!/usr/bin/env ruby

Device = Struct.new(:name, :uid, :path, :option)
@device = Device.new()
@device.path = 'device_list.txt'
@device.option = ARGV.first

def border
  puts "=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
end

def intro_message
  %[
     To find out your device UID
     'instruments -s devices'

     Or `note_device devices`
   ]
end

def present? string
  string.size > 0 && !string.nil? ? true : false
end

def get_uid
  puts "Enter a Device UID"
  border
  uid = gets.chomp
  @device.uid = uid if present?(uid)
end

def get_name
  puts "Enter a Device name"
  border
  name = gets.chomp
  @device.name = name if present?(name)
end

def create_file
  file = File.open(@device.path, 'w+')
  file.puts("Device ID\t Device Name")
  file.close
  puts "So we created you a file at #{Dir.pwd + @device.path}"
  puts "Headers Device ID \t Device Name"
end

def formatted_table
  "#{@device.uid}\t#{@device.name}"
end

def write_uid_and_name
  if @device.uid && @device.name
    File.open(@device.path, 'a') do |f|
      f.puts "#{@device.uid}\t#{@device.name}"
      f.close
    end
  else
    puts "Sorry you fucked up"
  end
end

def list_devices
  lines = File.readlines(@device.path)
  lines.each { |l| puts "\t#{ l }" }
end

def list_system_devices
  puts `sudo instruments -s devices`
end

def push_device_list
  full_path = `find $HOME/* -name 'note_device'`
  dir_path = File.dirname(full_path)
  Dir.chdir(dir_path)
  if Dir.pwd.match(dir_path)
    `git add device_list.txt`
    `git commit -m 'update device uid list'`
    `git push origin master`
  else
    puts %[
            We can't find the */note_device Directory
          ]
  end
end

def define_option
  case
    when @device.option.match(/list/)
      list_devices
    when @device.option.match(/push/)
      push_device_list
    when @device.option.match(/devices/)
      list_system_devices
    else
      puts "Well we don't know what you mean, your option sucks list or push that's it"
  end
end

def decide_your_path
  if @device.option
    define_option
  else
    puts intro_message
    get_uid
    get_name
    write_uid_and_name
  end
end

begin

  if File.exists? @device.path
    puts  %[
            We found the file we were looking for at #{@device.path}
            This is where we store your device id's
           ]
           border
  else
    create_file
  end

rescue => e

  e.message

ensure

  decide_your_path
  10.times { sleep 0.04; puts '.'}
  20.times { sleep 0.04; print '.'}
  puts ".-> good by sir"

end
